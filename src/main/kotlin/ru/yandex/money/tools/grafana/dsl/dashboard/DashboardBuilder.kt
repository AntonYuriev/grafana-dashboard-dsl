package ru.yandex.money.tools.grafana.dsl.dashboard

import ru.yandex.money.tools.grafana.dsl.DashboardElement
import ru.yandex.money.tools.grafana.dsl.datasource.Datasource
import ru.yandex.money.tools.grafana.dsl.panels.Panel
import ru.yandex.money.tools.grafana.dsl.panels.Panels
import ru.yandex.money.tools.grafana.dsl.panels.PanelsBuilder
import ru.yandex.money.tools.grafana.dsl.time.Refresh
import ru.yandex.money.tools.grafana.dsl.time.h
import ru.yandex.money.tools.grafana.dsl.time.now
import ru.yandex.money.tools.grafana.dsl.time.s
import ru.yandex.money.tools.grafana.dsl.variables.VariableBuilder
import ru.yandex.money.tools.grafana.dsl.variables.VariableDelegate
import ru.yandex.money.tools.grafana.dsl.variables.Variables
import ru.yandex.money.tools.grafana.dsl.variables.VariablesBuilder

/**
 * Dashboard builder.
 *
 * @property title Dashboard title
 *
 * @author Dmitry Komarov (komarovdmitry@yamoney.ru)
 * @since 7/21/18
 */
@DashboardElement
class DashboardBuilder(private val title: String) {

    private val panels = mutableListOf<Panel>()

    var timeRange = now - 6.h..now

    var refresh: Refresh = 30.s

    val tags = mutableListOf<String>()

    val variables = VariablesBuilder()

    fun panels(build: PanelsBuilder.() -> Unit) {
        val builder = PanelsBuilder()
        builder.build()
        panels += builder.panels
    }

    /**
     * Build variable.
     */
    @Deprecated("This method will be deleted in 2.0.0", ReplaceWith("VariablesBuilder"))
    fun variable(datasource: Datasource? = null, build: VariableBuilder.() -> Unit): VariableDelegate {
        val builder = VariableBuilder(datasource)
        builder.build()
        return builder.createDelegate(variables.variables)
    }

    internal fun createDashboard() = Dashboard(
            title,
            timeRange,
            refresh,
            Tags(tags + "autogenerated"),
            Variables(variables.variables),
            Panels(panels)
    )
}
